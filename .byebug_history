q
direction
position
s
display current_pos
s
direction
s
n
s
current_pos
s
curr_x
curr_y
s
display move_array
color
current_pos
directions
moves
q
q
moves
continue
n
move_array
n
directions
moves
q
s
move
s
directions
s
q
s
move_array
n
s
continue
directions
position
move_array
n
directions
continue
position[0]
position
directions
q
s
directions
s
q
n
s
directions
current_pos
s
self.position
self
current_pos
s
q
n
s
valid_moves
q
n
s
moves
s
valid_moves
q
s
self.valid_moves
self
valid_moves
q
moves
self
q
s
continue
to
valid_move?(to)
moves
n
s
continue
self.moves
valid_moves
self
n
s
continue
valid_moves
self
n
s
q
self.board[to]
self.board
self.color
self
q
qq
continue
self
@board
board
continue
q
n
s
q
@display
display
@display.class
continue
@display.class.class
@display.class
@display
q
idx
row
n
row
q
n
row[0].inspect
row[0]
row
@board
n
s
q
n
s
@display
@board
n
grid
s
|_, idx|
s
q
Pawn.new(:black, [1, idx])
idx
s
idx
pawn = Pawn.new(:black, [1, idx])
s
display grid[1]
grid[1]
grid[1][idx]
idx
s
n
q
y
q
grid[1,2]
grid[1]
square
grid
s
grid
q
@board
@grid
s
n
s
q
@board
self
s
q
s
display row_number
display row
s
display row
s
self
game
wtf
whereami
s
n
s
q
game.board
game.grid
s
@board.grid
grid
s
n
asdf
n
s
game.board[1,2]
game.board[1]
game.board
q
game.board
game
self
@board.grid
@board
grid[0]
@grid[0]
@grid[0][1]
game
q
self
game
s
q
reload
@board
s
